# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
# Hello CI/CD
name: Ci_Test_Action

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest


    services:

      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: mini_chatdb
        options: >-
          --health-cmd pg_ready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5433
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.1'

      - name: Test
        run: go test -v ./...


      - name: Stop old PostgreSQL containers
        run: |
          docker ps -q --filter ancestor=postgres:12 | xargs -r docker stop
          docker ps -aq --filter ancestor=postgres:12 | xargs -r docker rm

      - name: Check PostgreSQL logs
        if: failure()
        run: docker logs $(docker ps -a -q --filter ancestor=postgres:12) || true


